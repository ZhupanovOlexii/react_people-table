{"version":3,"sources":["HomePage.tsx","api.tsx","PersonRow.tsx","PeopleTable.tsx","PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","getPreparedPeople","a","fetch","then","response","json","peopleFromServer","map","person","index","id","father","fatherName","mother","motherName","age","died","born","century","Math","ceil","PersonRow","people","history","useHistory","personSlug","useParams","location","useLocation","className","classNames","person__active","slug","key","onClick","personUrl","push","pathname","search","name","person__male","sex","person__female","PeopleTable","useState","setPeople","searchParams","URLSearchParams","currentQuery","setCurrentQuery","sortBy","useMemo","get","sortOrder","queryFromURL","useEffect","visiblePeople","filter","toLowerCase","includes","sort","b","localeCompare","queryWithDebounce","useCallback","debounce","query","set","delete","toString","type","value","placeholder","onChange","target","headItem","sortingBy","PeoplePage","App","to","exact","activeClassName","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24cbbb31.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n  <h2>Home Page</h2>\n);\n\nexport default HomePage;\n","const API_PEOPLE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getPeople = () => {\n  return fetch(API_PEOPLE_URL)\n    .then(response => response.json());\n};\n\nexport const getPreparedPeople = async () => {\n  const peopleFromServer = await getPeople();\n\n  return peopleFromServer.map((person: Person, index: number) => ({\n    ...person,\n    id: index + 1,\n    father: person.fatherName ? person.fatherName : '---',\n    mother: person.motherName ? person.motherName : '---',\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n  }));\n};\n","import React from 'react';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\n\ntype PersonRowProps = {\n  people: Person[];\n};\n\nconst PersonRow: React.FC<PersonRowProps> = ({ people }) => {\n  const history = useHistory();\n  const { personSlug } = useParams();\n  const location = useLocation();\n\n  const selectPerson = (personUrl: string) => {\n    history.push({\n      pathname: `/people/${personUrl}`,\n      search: location.search,\n    });\n  };\n\n  return (\n    <>\n      {people.map((person: Person) => (\n        <tr\n          className={classNames({\n            person,\n            person__active: person.slug === personSlug,\n          })}\n          key={person.id}\n          onClick={() => selectPerson(person.slug)}\n        >\n          <td>\n            {person.id}\n          </td>\n          <td>\n            {person.name}\n          </td>\n          <td className={classNames({\n            person__male: person.sex === 'm',\n            person__female: person.sex === 'f',\n          })}\n          >\n            {person.sex}\n          </td>\n          <td>\n            {person.born}\n          </td>\n          <td>\n            {person.died}\n          </td>\n          <td>\n            {person.age}\n          </td>\n          <td className=\"person__male\">\n            {person.father}\n          </td>\n          <td className=\"person__female\">\n            {person.mother}\n          </td>\n          <td>\n            {person.century}\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n\nexport default PersonRow;\n","import React, {\n  useEffect, useState, useMemo, useCallback, ChangeEventHandler,\n} from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { getPreparedPeople } from './api';\nimport PersonRow from './PersonRow';\n\nconst PeopleTable = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const [currentQuery, setCurrentQuery] = useState('');\n\n  const sortBy = useMemo(() => searchParams.get('sortBy') || '', [searchParams]);\n  const sortOrder = useMemo(() => searchParams.get('sortOrder') || '', [searchParams]);\n  const queryFromURL = useMemo(() => searchParams.get('query') || '', [searchParams]);\n\n\n  const headOfTable = ['id', 'name', 'sex', 'born', 'died', 'age', 'father', 'mother', 'century'];\n\n  useEffect(() => {\n    getPreparedPeople().then((peopleFromServer) => {\n      setPeople(peopleFromServer);\n    });\n  }, []);\n\n  const visiblePeople = useMemo(() => {\n    return people\n      .filter(person => (\n        (person.name + person.father + person.mother)\n          .toLowerCase().includes(queryFromURL.toLowerCase())\n      ));\n  }, [people, queryFromURL]);\n\n  const sortingBy = (headItem: string) => {\n    if (sortBy === headItem && sortOrder === 'asc') {\n      searchParams.set('sortOrder', 'desc');\n    } else {\n      searchParams.set('sortOrder', 'asc');\n    }\n\n    searchParams.set('sortBy', headItem);\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  useMemo(() => {\n    switch (sortOrder) {\n      case 'asc':\n        switch (sortBy) {\n          case 'id':\n          case 'born':\n          case 'died':\n          case 'age':\n          case 'century':\n            visiblePeople.sort((a, b) => a[sortBy] - b[sortBy]);\n            break;\n          case 'name':\n          case 'sex':\n          case 'father':\n          case 'mother':\n            visiblePeople.sort((a, b) => a[sortBy].localeCompare(b[sortBy]));\n            break;\n          default:\n        }\n\n        break;\n\n      case 'desc':\n        switch (sortBy) {\n          case 'id':\n          case 'born':\n          case 'died':\n          case 'age':\n          case 'century':\n            visiblePeople.sort((a, b) => b[sortBy] - a[sortBy]);\n            break;\n          case 'name':\n          case 'sex':\n          case 'father':\n          case 'mother':\n            visiblePeople.sort((a, b) => b[sortBy].localeCompare(a[sortBy]));\n            break;\n          default:\n        }\n\n        break;\n      default:\n    }\n  },\n  [visiblePeople, sortOrder, sortBy]);\n\n  useEffect(() => {\n    setCurrentQuery(queryFromURL);\n  }, [queryFromURL]);\n\n  const updateQueryInURL = (query: string) => {\n    if (query) {\n      searchParams.set('query', query);\n    } else {\n      searchParams.delete('query');\n    }\n\n    history.push({ search: searchParams.toString() });\n  };\n\n  const queryWithDebounce = useCallback(debounce(updateQueryInURL, 500), []);\n\n  const changeQuery: ChangeEventHandler<HTMLInputElement> = ({ target }) => {\n    setCurrentQuery(target.value);\n    queryWithDebounce(target.value);\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={currentQuery}\n        placeholder=\"whom you search\"\n        onChange={changeQuery}\n      />\n      <table className=\"Table\">\n        <thead>\n          <tr>\n            {headOfTable.map(headItem => (\n              <th\n                key={headItem}\n                onClick={() => sortingBy(headItem)}\n              >\n                {headItem === sortBy && <span>*</span>}\n                {headItem}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <PersonRow people={visiblePeople} />\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PeopleTable from './PeopleTable';\n\n\nconst PeoplePage = () => {\n  return (\n    <>\n      <h2>People page</h2>\n      <PeopleTable />\n    </>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\nimport {\n  NavLink, Route, Switch, Redirect,\n} from 'react-router-dom';\nimport HomePage from './HomePage';\nimport PeoplePage from './PeoplePage';\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <>\n      <nav className=\"nav\">\n        <ul className=\"nav__list\">\n          <li>\n            <NavLink\n              to=\"/\"\n              exact\n              className=\"nav__link\"\n              activeClassName=\"nav__link--active\"\n            >\n            HomePage\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/people\"\n              className=\"nav__link\"\n              activeClassName=\"nav__link--active\"\n            >\n            PeoplePage\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Redirect from=\"/home\" to=\"/\" />\n        <Route\n          exact\n          path=\"/people/:personSlug?\"\n          component={PeoplePage}\n        />\n        <Route component={() => <h1>Sorry,page not found</h1>} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}