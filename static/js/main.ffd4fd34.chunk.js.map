{"version":3,"sources":["HomePage.tsx","api.tsx","PersonRow.tsx","PeopleTable.tsx","PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","getPreparedPeople","a","fetch","then","response","json","peopleFromServer","map","person","index","id","father","fatherName","mother","motherName","age","died","born","century","Math","ceil","PersonRow","people","history","useHistory","personSlug","useParams","location","useLocation","className","classNames","person__active","slug","key","onClick","personUrl","push","pathname","search","name","person__male","sex","person__female","PeopleTable","useState","setPeople","searchParams","URLSearchParams","sortBy","useMemo","get","sortOrder","useEffect","query","pattern","RegExp","visiblePeople","filter","test","sort","b","localeCompare","reverse","type","value","placeholder","onChange","event","target","headItem","set","toString","sortingBy","PeoplePage","App","to","exact","activeClassName","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffd4fd34.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n  <h2>Home Page</h2>\n);\n\nexport default HomePage;\n","const API_PEOPLE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getPeople = () => {\n  return fetch(API_PEOPLE_URL)\n    .then(response => response.json());\n};\n\nexport const getPreparedPeople = async () => {\n  const peopleFromServer = await getPeople();\n\n  return peopleFromServer.map((person: Person, index: number) => ({\n    ...person,\n    id: index + 1,\n    father: person.fatherName ? person.fatherName : '---',\n    mother: person.motherName ? person.motherName : '---',\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n  }));\n};\n","import React from 'react';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\n\ntype PersonRowProps = {\n  people: Person[];\n};\n\nconst PersonRow: React.FC<PersonRowProps> = ({ people }) => {\n  const history = useHistory();\n  const { personSlug } = useParams();\n  const location = useLocation();\n\n  const selectPerson = (personUrl: string) => {\n    history.push({\n      pathname: `/people/${personUrl}`,\n      search: location.search,\n    });\n  };\n\n  return (\n    <>\n      {people.map((person: Person) => (\n        <tr\n          className={classNames({\n            person,\n            person__active: person.slug === personSlug,\n          })}\n          key={person.id}\n          onClick={() => selectPerson(person.slug)}\n        >\n          <td>\n            {person.id}\n          </td>\n          <td>\n            {person.name}\n          </td>\n          <td className={classNames({\n            person__male: person.sex === 'm',\n            person__female: person.sex === 'f',\n          })}\n          >\n            {person.sex}\n          </td>\n          <td>\n            {person.born}\n          </td>\n          <td>\n            {person.died}\n          </td>\n          <td>\n            {person.age}\n          </td>\n          <td className=\"person__male\" >\n            {person.father}\n          </td>\n          <td className=\"person__female\">\n            {person.mother}\n          </td>\n          <td>\n            {person.century}\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n\nexport default PersonRow;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getPreparedPeople } from './api';\nimport PersonRow from './PersonRow';\n\n\nconst PeopleTable = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const sortBy = useMemo(() => searchParams.get('sortBy') || '', [searchParams]);\n  const sortOrder = useMemo(() => searchParams.get('sortOrder') || '', [searchParams]);\n  const headOfTable = ['id', 'name', 'sex', 'born', 'died', 'age', 'father', 'mother', 'century'];\n\n  useEffect(() => {\n    getPreparedPeople().then((peopleFromServer) => {\n      setPeople(peopleFromServer);\n    });\n  }, []);\n\n\n  const query: string = searchParams.get('query') || '';\n  const pattern = new RegExp(query, 'i');\n  const visiblePeople = people\n    .filter(person => pattern.test(person.name + person.fatherName + person.motherName));\n\n\n  const sortingBy = (headItem: string) => {\n    if (sortBy === headItem && sortOrder === 'asc') {\n      searchParams.set('sortOrder', 'desc');\n    } else {\n      searchParams.set('sortOrder', 'asc');\n    }\n\n    searchParams.set('sortBy', headItem);\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  useMemo(() => {\n    switch (sortBy) {\n      case 'id':\n      case 'born':\n      case 'died':\n      case 'age':\n      case 'century':\n        visiblePeople.sort((a, b) => a[sortBy] - b[sortBy]);\n        break;\n      case 'name':\n      case 'sex':\n      case 'father':\n      case 'mother':\n        visiblePeople.sort((a, b) => a[sortBy].localeCompare(b[sortBy]));\n        break;\n      default:\n    }\n  },\n  [visiblePeople, sortBy]);\n\n  useMemo(() => {\n    switch (sortOrder) {\n      case 'desc':\n        visiblePeople.reverse();\n        break;\n      default:\n    }\n  },\n  [visiblePeople, sortOrder]);\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={query}\n        placeholder=\"whom you search\"\n        onChange={(event) => {\n          history.push({\n            search: `?query=${event.target.value}`,\n          });\n        }}\n\n      />\n      <table className=\"Table\">\n        <thead>\n          <tr>\n            {headOfTable.map(headItem => (\n              <th\n                key={headItem}\n                onClick={() => sortingBy(headItem)}\n              >\n                {headItem === sortBy && <span>*</span>}\n                {headItem}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <PersonRow people={visiblePeople} />\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PeopleTable from './PeopleTable';\n\n\nconst PeoplePage = () => {\n  return (\n    <>\n      <h2>People page</h2>\n      <PeopleTable />\n    </>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\nimport {\n  NavLink, Route, Switch, Redirect,\n} from 'react-router-dom';\nimport HomePage from './HomePage';\nimport PeoplePage from './PeoplePage';\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <>\n      <nav className=\"nav\">\n        <ul className=\"nav__list\">\n          <li>\n            <NavLink\n              to=\"/\"\n              exact\n              className=\"nav__link\"\n              activeClassName=\"nav__link--active\"\n            >\n            HomePage\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/people\"\n              className=\"nav__link\"\n              activeClassName=\"nav__link--active\"\n            >\n            PeoplePage\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Redirect from=\"/home\" to=\"/\" />\n        <Route\n          exact\n          path=\"/people/:personSlug?\"\n          component={PeoplePage}\n        />\n        <Route component={() => <h1>Sorry,page not found</h1>} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}